version: '3'

services:
  # clientsvc:
  #   container_name: clientsvc
  #   build: 
  #     context: .
  #     dockerfile: clientsvc/clientsvc.Dockerfile
  #   ports:
  #     - 9999:9999
  #   restart: on-failure
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #     - redis
  #   networks:
  #     - local
      
  # dataprocessorengine:
  #   container_name: dataprocessorengine
  #   build: 
  #     context: .
  #     dockerfile: dataprocessorengine/dataprocessorengine.Dockerfile
  #   ports:
  #     - 9191:9191
  #   restart: on-failure
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #     - redis
  #   networks:
  #     - local
  
  # fileprocessorengine:
  #   container_name: fileprocessorengine
  #   build: 
  #     context: .
  #     dockerfile: fileprocessorengine/fileprocessorengine.Dockerfile
  #   ports:
  #     - 9292:9292
  #   restart: on-failure
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #     - redis
  #   networks:
  #     - local

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    networks:
      - local

  kafka:
    image: 'bitnami/kafka:latest'
    deploy:
      replicas: 1
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9093,OUTSIDE://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,OUTSIDE://sub.domain.ltd:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      - local

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    networks:
      - local

networks:
  local:
    driver: bridge