// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"
	pubsub "stock-data-processing/pkg/pubsub"

	mock "github.com/stretchr/testify/mock"
)

// DLQHandler is an autogenerated mock type for the DLQHandler type
type DLQHandler struct {
	mock.Mock
}

// Send provides a mock function with given fields: ctx, dlqMessage
func (_m *DLQHandler) Send(ctx context.Context, dlqMessage *pubsub.DeadLetterQueueMessage) error {
	ret := _m.Called(ctx, dlqMessage)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *pubsub.DeadLetterQueueMessage) error); ok {
		r0 = rf(ctx, dlqMessage)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDLQHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewDLQHandler creates a new instance of DLQHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDLQHandler(t mockConstructorTestingTNewDLQHandler) *DLQHandler {
	mock := &DLQHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
